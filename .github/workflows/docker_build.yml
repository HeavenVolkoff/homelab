name: Containers

on:
  workflow_dispatch:
  push:
    paths:
      - 'services/**'
      - 'utilities/**'
      - '.env.example'
      - 'compose.yml'
      - 'compose.override.yml'
      - '.github/workflows/docker_build.yml'
    branches:
      - 'main'
  pull_request:
    paths:
      - 'services/**'
      - 'utilities/**'
      - '.env.example'
      - 'compose.yml'
      - 'compose.override.yml'
      - '.github/workflows/docker_build.yml'

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY_IMAGE: ghcr.io/HeavenVolkoff/homelab

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.generate.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Symlink .env
        run: ln -s .env.example .env
      - name: List targets
        id: generate
        uses: docker/bake-action/subaction/list-targets@v6
        with:
          target: default

  build-containers:
    name: Build Containers
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Symlink .env
        run: ln -s .env.example .env
      - name: Login to GitHub Container Registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and Push (PRs)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/bake-action@v6
        with:
          source: .
          targets: ${{ matrix.target }}
          allow: network.host
          push: false
      - name: Build and Push (main)
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/bake-action@v6
        with:
          source: .
          targets: ${{ matrix.target }}
          allow: network.host
          push: true
          set: |
            *.cache-from=type=gha,scope=${{ matrix.target }}
            *.cache-to=type=gha,mode=max,scope=${{ matrix.target }}

  result:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build Result
    needs: [build-containers]
    steps:
      - run: |
          result="${{ needs.build-containers.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
